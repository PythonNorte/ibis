parameters:
  name: ''
  vmImage: ''

jobs:
- job: ${{ parameters.name }}Test

  pool:
    vmImage: ${{ parameters.vmImage }}

  variables:
    AZURECI: 1

  strategy:
    matrix:
      py36:
        PYTHON_VERSION: "3.6"
      py37:
        PYTHON_VERSION: "3.7"
      py38:
        PYTHON_VERSION: "3.8"

  steps:
    - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      displayName: Add conda to PATH

    - script: |
        conda config --set always_yes True --set show_channel_urls True
        conda config --add channels conda-forge
        conda update --all
        conda env create --name ibis-dev python=$(PYTHON_VERSION) --file=ci/requirements-dev.yml
        conda info
        conda list --name ibis-dev
        conda list --export --name ibis-dev > env.yml
      displayName: 'Set up conda'

    - task: PublishPipelineArtifact@1
      inputs:
        path: env.yml
        artifact: WindowsCondaEnvironment$(PYTHON_VERSION)
      displayName: 'Publish Windows environment YAML to Azure'
      condition: succeededOrFailed()  # pass or fail, but not cancelled

    - script: choco install -y mariadb --version=10.3.16
      displayName: 'Install mariadb (mysql) from chocolatey'

    - script: '"C:\\Program Files\\MariaDB 10.3\\bin\\mysql" -u root -e "CREATE OR REPLACE USER ibis@localhost IDENTIFIED BY ''ibis''"'
      displayName: 'Create ibis user and password in MySQL database'

    - script: '"C:\\Program Files\\MariaDB 10.3\\bin\\mysql" -u root -e "GRANT ALL PRIVILEGES ON *.* TO ibis@localhost"'
      displayName: 'Setup privileges for ibis user in MySQL'

    - script: choco install -y postgresql10 --params '/Password:postgres'
      displayName: 'Install postgres from chocolatey'

    - script: |
        call activate ibis-dev
        pip install -e . --no-deps --ignore-installed --no-cache-dir
      displayName: 'Install ibis'

    - script: |
        call activate ibis-dev
        python ci/datamgr.py download
      displayName: 'Download data'

    - script: |
        call activate ibis-dev
        python ci/datamgr.py mysql
      displayName: 'Load MySQL data'

    - script: |
        call activate ibis-dev
        python ci/datamgr.py postgres --no-plpython --psql-path="C:/Program Files/PostgreSQL/10/bin/psql.exe" -t functional_alltypes -t diamonds -t batting -t awards_players
      displayName: 'Load PostgreSQL data'

    - script: |
        call activate ibis-dev
        python ci/datamgr.py sqlite
      displayName: 'Load SQLite data'

    - script: |
        call activate ibis-dev
        python ci/datamgr.py parquet -i
      displayName: 'Load Parquet data'

    - script: |
        call activate ibis-dev
        pytest --tb=short --junitxml="junit-$(PYTHON_VERSION).xml" -n auto -m "not backend and not clickhouse and not impala and not hdfs and not bigquery and not omniscidb and not postgis and not postgresql" -ra ibis
      displayName: 'Run tests'

    - task: PublishTestResults@2
      displayName: 'Publish test results from pytest JUnitXML'
      inputs:
        testResultsFiles: junit-$(PYTHON_VERSION).xml
        testRunTitle: 'Publish test results'
        mergeTestResults: False
      condition: succeededOrFailed()  # pass or fail, but not cancelled
